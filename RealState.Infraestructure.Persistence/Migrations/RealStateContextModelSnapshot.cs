// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealState.Infraestructure.Persistence.Context;

#nullable disable

namespace RealState.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(RealStateContext))]
    partial class RealStateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.FavoriteProperties", b =>
                {
                    b.Property<int>("PropertiesId")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PropertiesId", "ClientId");

                    b.ToTable("FavoriteProperties", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.ImagesProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertiesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertiesId");

                    b.ToTable("ImagesProperties", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Improvements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Improvements", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "es una habitación",
                            IsDeleted = false,
                            Name = "Habitación"
                        },
                        new
                        {
                            Id = 2,
                            Description = "es una Cocina",
                            IsDeleted = false,
                            Name = "Cocina"
                        });
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Properties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BathroomQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("LandSizeMeter")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PropertiesTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SaleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertiesTypeId");

                    b.HasIndex("SaleTypeId");

                    b.ToTable("Properties", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropertiesImprovements", b =>
                {
                    b.Property<int>("PropertiesId")
                        .HasColumnType("int");

                    b.Property<int>("ImprovementId")
                        .HasColumnType("int");

                    b.HasKey("PropertiesId", "ImprovementId");

                    b.HasIndex("ImprovementId");

                    b.ToTable("PropertiesImprovements", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropertiesTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertiesTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "es una grasa",
                            IsDeleted = false,
                            Name = "Apartamento"
                        });
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.SalesTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SaleTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "se paga en un determinado tiempo",
                            IsDeleted = false,
                            Name = "Alquiler"
                        });
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.FavoriteProperties", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Properties", "Properties")
                        .WithMany("FavoriteProperties")
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.ImagesProperties", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Properties", "Properties")
                        .WithMany("ImagesProperties")
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Properties", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.PropertiesTypes", "PropertiesTypes")
                        .WithMany("Properties")
                        .HasForeignKey("PropertiesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.SalesTypes", "SaleType")
                        .WithMany("Properties")
                        .HasForeignKey("SaleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertiesTypes");

                    b.Navigation("SaleType");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropertiesImprovements", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Improvements", "Improvements")
                        .WithMany("PropertiesImprovements")
                        .HasForeignKey("ImprovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.Properties", "Properties")
                        .WithMany("PropertiesImprovements")
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Improvements");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Improvements", b =>
                {
                    b.Navigation("PropertiesImprovements");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Properties", b =>
                {
                    b.Navigation("FavoriteProperties");

                    b.Navigation("ImagesProperties");

                    b.Navigation("PropertiesImprovements");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropertiesTypes", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.SalesTypes", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
